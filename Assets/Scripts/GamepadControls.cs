//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/GamepadControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GamepadControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GamepadControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GamepadControls"",
    ""maps"": [
        {
            ""name"": ""Input"",
            ""id"": ""88db05b5-0b71-4fc5-b886-5dddd021e2b6"",
            ""actions"": [
                {
                    ""name"": ""LeftJoystick"",
                    ""type"": ""Value"",
                    ""id"": ""3bf645d0-921f-49cf-98b0-926dfeb352ad"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightJoystick"",
                    ""type"": ""Value"",
                    ""id"": ""de0a204a-8e95-477b-b9d8-b117b3ee0c02"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftJoystickDown"",
                    ""type"": ""Button"",
                    ""id"": ""8774342e-aa9b-4a5a-aad9-74d3188ed998"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightJoystickDown"",
                    ""type"": ""Button"",
                    ""id"": ""35b7abd8-d660-49c4-a862-d58840f77c73"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftBumper"",
                    ""type"": ""Button"",
                    ""id"": ""6ca835f6-7b54-4d53-a702-6b11b2bec0a4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightBumper"",
                    ""type"": ""Button"",
                    ""id"": ""0f442cf6-3a89-460e-a1d1-7df67f8dd67c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ButtonTop"",
                    ""type"": ""Button"",
                    ""id"": ""acaba334-1d60-4238-9093-5bd382573087"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ButtonLeft"",
                    ""type"": ""Button"",
                    ""id"": ""d811dbe8-6c21-4e67-958d-56a06d6fecdc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ButtonBottom"",
                    ""type"": ""Button"",
                    ""id"": ""b9dbd9cb-b713-4ccc-bea7-d560f761db14"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ButtomRight"",
                    ""type"": ""Button"",
                    ""id"": ""6c44d585-5abc-48df-a37d-f45c1eaeeb21"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftTrigger"",
                    ""type"": ""Button"",
                    ""id"": ""a10352ad-71ef-4e51-a952-a4d1341b5b1f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightTrigger"",
                    ""type"": ""Button"",
                    ""id"": ""eb2a195e-5bcb-4637-ab67-973b1576e3ff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PadTop"",
                    ""type"": ""Button"",
                    ""id"": ""1d4763c7-990a-452a-90b3-ea7759ec6141"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PadBottom"",
                    ""type"": ""Button"",
                    ""id"": ""4e78aeab-004a-468e-8ece-b5cadf684f6e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PadLeft"",
                    ""type"": ""Button"",
                    ""id"": ""d8df181b-f63e-4b95-879c-45669f5444c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PadRight"",
                    ""type"": ""Button"",
                    ""id"": ""d33c26d3-73d5-4ac9-bb48-ddbac537ed63"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Start"",
                    ""type"": ""Button"",
                    ""id"": ""aa01b17c-db70-4c58-9aba-3b7afeae637c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""1d96865e-399c-4f08-bc23-b4333fa4b430"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b8216dbe-18c6-4cc6-8c2b-217776aae130"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftJoystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7e66fc9a-582e-4438-ac10-18dcd907bc28"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightJoystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""18afa4c4-928a-4548-a4ee-b9daab85c99f"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftBumper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8477b6b6-a475-4cfb-ae5d-83522e661a04"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightBumper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b91b2127-4331-4aa8-a719-b4780f1e7456"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ButtonTop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2a6f243f-13c4-4650-836d-57c7271caa16"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ButtonLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b49b0b49-1c8a-486c-adba-61560d445356"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ButtonBottom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24b080d9-3c46-46c6-a762-62f7d61982ea"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ButtomRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d09ae4d-3950-46cc-8bc7-1e77013c9614"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftTrigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6447f68-0d7c-4028-8417-a6a9d6c37d2f"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightTrigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1af67a67-24fb-4399-8881-de1a7e85ef4b"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PadRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ff33aca-d1a6-4878-9c61-7f95152f9d30"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PadLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1eb5099e-274b-4226-a3b5-7877256fcc2a"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PadBottom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ad9370c-51c3-443a-b866-061f2c14aea6"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PadTop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""054918e9-484f-4f78-9eb2-35d3051aa726"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightJoystickDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f042c92b-6ee5-496d-9450-775731befe81"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftJoystickDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4f18063a-f80a-406a-8012-c90377e23466"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d75e7cf8-4f82-46af-9880-f9d2e7df92ee"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Input
        m_Input = asset.FindActionMap("Input", throwIfNotFound: true);
        m_Input_LeftJoystick = m_Input.FindAction("LeftJoystick", throwIfNotFound: true);
        m_Input_RightJoystick = m_Input.FindAction("RightJoystick", throwIfNotFound: true);
        m_Input_LeftJoystickDown = m_Input.FindAction("LeftJoystickDown", throwIfNotFound: true);
        m_Input_RightJoystickDown = m_Input.FindAction("RightJoystickDown", throwIfNotFound: true);
        m_Input_LeftBumper = m_Input.FindAction("LeftBumper", throwIfNotFound: true);
        m_Input_RightBumper = m_Input.FindAction("RightBumper", throwIfNotFound: true);
        m_Input_ButtonTop = m_Input.FindAction("ButtonTop", throwIfNotFound: true);
        m_Input_ButtonLeft = m_Input.FindAction("ButtonLeft", throwIfNotFound: true);
        m_Input_ButtonBottom = m_Input.FindAction("ButtonBottom", throwIfNotFound: true);
        m_Input_ButtomRight = m_Input.FindAction("ButtomRight", throwIfNotFound: true);
        m_Input_LeftTrigger = m_Input.FindAction("LeftTrigger", throwIfNotFound: true);
        m_Input_RightTrigger = m_Input.FindAction("RightTrigger", throwIfNotFound: true);
        m_Input_PadTop = m_Input.FindAction("PadTop", throwIfNotFound: true);
        m_Input_PadBottom = m_Input.FindAction("PadBottom", throwIfNotFound: true);
        m_Input_PadLeft = m_Input.FindAction("PadLeft", throwIfNotFound: true);
        m_Input_PadRight = m_Input.FindAction("PadRight", throwIfNotFound: true);
        m_Input_Start = m_Input.FindAction("Start", throwIfNotFound: true);
        m_Input_Select = m_Input.FindAction("Select", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Input
    private readonly InputActionMap m_Input;
    private List<IInputActions> m_InputActionsCallbackInterfaces = new List<IInputActions>();
    private readonly InputAction m_Input_LeftJoystick;
    private readonly InputAction m_Input_RightJoystick;
    private readonly InputAction m_Input_LeftJoystickDown;
    private readonly InputAction m_Input_RightJoystickDown;
    private readonly InputAction m_Input_LeftBumper;
    private readonly InputAction m_Input_RightBumper;
    private readonly InputAction m_Input_ButtonTop;
    private readonly InputAction m_Input_ButtonLeft;
    private readonly InputAction m_Input_ButtonBottom;
    private readonly InputAction m_Input_ButtomRight;
    private readonly InputAction m_Input_LeftTrigger;
    private readonly InputAction m_Input_RightTrigger;
    private readonly InputAction m_Input_PadTop;
    private readonly InputAction m_Input_PadBottom;
    private readonly InputAction m_Input_PadLeft;
    private readonly InputAction m_Input_PadRight;
    private readonly InputAction m_Input_Start;
    private readonly InputAction m_Input_Select;
    public struct InputActions
    {
        private @GamepadControls m_Wrapper;
        public InputActions(@GamepadControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftJoystick => m_Wrapper.m_Input_LeftJoystick;
        public InputAction @RightJoystick => m_Wrapper.m_Input_RightJoystick;
        public InputAction @LeftJoystickDown => m_Wrapper.m_Input_LeftJoystickDown;
        public InputAction @RightJoystickDown => m_Wrapper.m_Input_RightJoystickDown;
        public InputAction @LeftBumper => m_Wrapper.m_Input_LeftBumper;
        public InputAction @RightBumper => m_Wrapper.m_Input_RightBumper;
        public InputAction @ButtonTop => m_Wrapper.m_Input_ButtonTop;
        public InputAction @ButtonLeft => m_Wrapper.m_Input_ButtonLeft;
        public InputAction @ButtonBottom => m_Wrapper.m_Input_ButtonBottom;
        public InputAction @ButtomRight => m_Wrapper.m_Input_ButtomRight;
        public InputAction @LeftTrigger => m_Wrapper.m_Input_LeftTrigger;
        public InputAction @RightTrigger => m_Wrapper.m_Input_RightTrigger;
        public InputAction @PadTop => m_Wrapper.m_Input_PadTop;
        public InputAction @PadBottom => m_Wrapper.m_Input_PadBottom;
        public InputAction @PadLeft => m_Wrapper.m_Input_PadLeft;
        public InputAction @PadRight => m_Wrapper.m_Input_PadRight;
        public InputAction @Start => m_Wrapper.m_Input_Start;
        public InputAction @Select => m_Wrapper.m_Input_Select;
        public InputActionMap Get() { return m_Wrapper.m_Input; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InputActions set) { return set.Get(); }
        public void AddCallbacks(IInputActions instance)
        {
            if (instance == null || m_Wrapper.m_InputActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InputActionsCallbackInterfaces.Add(instance);
            @LeftJoystick.started += instance.OnLeftJoystick;
            @LeftJoystick.performed += instance.OnLeftJoystick;
            @LeftJoystick.canceled += instance.OnLeftJoystick;
            @RightJoystick.started += instance.OnRightJoystick;
            @RightJoystick.performed += instance.OnRightJoystick;
            @RightJoystick.canceled += instance.OnRightJoystick;
            @LeftJoystickDown.started += instance.OnLeftJoystickDown;
            @LeftJoystickDown.performed += instance.OnLeftJoystickDown;
            @LeftJoystickDown.canceled += instance.OnLeftJoystickDown;
            @RightJoystickDown.started += instance.OnRightJoystickDown;
            @RightJoystickDown.performed += instance.OnRightJoystickDown;
            @RightJoystickDown.canceled += instance.OnRightJoystickDown;
            @LeftBumper.started += instance.OnLeftBumper;
            @LeftBumper.performed += instance.OnLeftBumper;
            @LeftBumper.canceled += instance.OnLeftBumper;
            @RightBumper.started += instance.OnRightBumper;
            @RightBumper.performed += instance.OnRightBumper;
            @RightBumper.canceled += instance.OnRightBumper;
            @ButtonTop.started += instance.OnButtonTop;
            @ButtonTop.performed += instance.OnButtonTop;
            @ButtonTop.canceled += instance.OnButtonTop;
            @ButtonLeft.started += instance.OnButtonLeft;
            @ButtonLeft.performed += instance.OnButtonLeft;
            @ButtonLeft.canceled += instance.OnButtonLeft;
            @ButtonBottom.started += instance.OnButtonBottom;
            @ButtonBottom.performed += instance.OnButtonBottom;
            @ButtonBottom.canceled += instance.OnButtonBottom;
            @ButtomRight.started += instance.OnButtomRight;
            @ButtomRight.performed += instance.OnButtomRight;
            @ButtomRight.canceled += instance.OnButtomRight;
            @LeftTrigger.started += instance.OnLeftTrigger;
            @LeftTrigger.performed += instance.OnLeftTrigger;
            @LeftTrigger.canceled += instance.OnLeftTrigger;
            @RightTrigger.started += instance.OnRightTrigger;
            @RightTrigger.performed += instance.OnRightTrigger;
            @RightTrigger.canceled += instance.OnRightTrigger;
            @PadTop.started += instance.OnPadTop;
            @PadTop.performed += instance.OnPadTop;
            @PadTop.canceled += instance.OnPadTop;
            @PadBottom.started += instance.OnPadBottom;
            @PadBottom.performed += instance.OnPadBottom;
            @PadBottom.canceled += instance.OnPadBottom;
            @PadLeft.started += instance.OnPadLeft;
            @PadLeft.performed += instance.OnPadLeft;
            @PadLeft.canceled += instance.OnPadLeft;
            @PadRight.started += instance.OnPadRight;
            @PadRight.performed += instance.OnPadRight;
            @PadRight.canceled += instance.OnPadRight;
            @Start.started += instance.OnStart;
            @Start.performed += instance.OnStart;
            @Start.canceled += instance.OnStart;
            @Select.started += instance.OnSelect;
            @Select.performed += instance.OnSelect;
            @Select.canceled += instance.OnSelect;
        }

        private void UnregisterCallbacks(IInputActions instance)
        {
            @LeftJoystick.started -= instance.OnLeftJoystick;
            @LeftJoystick.performed -= instance.OnLeftJoystick;
            @LeftJoystick.canceled -= instance.OnLeftJoystick;
            @RightJoystick.started -= instance.OnRightJoystick;
            @RightJoystick.performed -= instance.OnRightJoystick;
            @RightJoystick.canceled -= instance.OnRightJoystick;
            @LeftJoystickDown.started -= instance.OnLeftJoystickDown;
            @LeftJoystickDown.performed -= instance.OnLeftJoystickDown;
            @LeftJoystickDown.canceled -= instance.OnLeftJoystickDown;
            @RightJoystickDown.started -= instance.OnRightJoystickDown;
            @RightJoystickDown.performed -= instance.OnRightJoystickDown;
            @RightJoystickDown.canceled -= instance.OnRightJoystickDown;
            @LeftBumper.started -= instance.OnLeftBumper;
            @LeftBumper.performed -= instance.OnLeftBumper;
            @LeftBumper.canceled -= instance.OnLeftBumper;
            @RightBumper.started -= instance.OnRightBumper;
            @RightBumper.performed -= instance.OnRightBumper;
            @RightBumper.canceled -= instance.OnRightBumper;
            @ButtonTop.started -= instance.OnButtonTop;
            @ButtonTop.performed -= instance.OnButtonTop;
            @ButtonTop.canceled -= instance.OnButtonTop;
            @ButtonLeft.started -= instance.OnButtonLeft;
            @ButtonLeft.performed -= instance.OnButtonLeft;
            @ButtonLeft.canceled -= instance.OnButtonLeft;
            @ButtonBottom.started -= instance.OnButtonBottom;
            @ButtonBottom.performed -= instance.OnButtonBottom;
            @ButtonBottom.canceled -= instance.OnButtonBottom;
            @ButtomRight.started -= instance.OnButtomRight;
            @ButtomRight.performed -= instance.OnButtomRight;
            @ButtomRight.canceled -= instance.OnButtomRight;
            @LeftTrigger.started -= instance.OnLeftTrigger;
            @LeftTrigger.performed -= instance.OnLeftTrigger;
            @LeftTrigger.canceled -= instance.OnLeftTrigger;
            @RightTrigger.started -= instance.OnRightTrigger;
            @RightTrigger.performed -= instance.OnRightTrigger;
            @RightTrigger.canceled -= instance.OnRightTrigger;
            @PadTop.started -= instance.OnPadTop;
            @PadTop.performed -= instance.OnPadTop;
            @PadTop.canceled -= instance.OnPadTop;
            @PadBottom.started -= instance.OnPadBottom;
            @PadBottom.performed -= instance.OnPadBottom;
            @PadBottom.canceled -= instance.OnPadBottom;
            @PadLeft.started -= instance.OnPadLeft;
            @PadLeft.performed -= instance.OnPadLeft;
            @PadLeft.canceled -= instance.OnPadLeft;
            @PadRight.started -= instance.OnPadRight;
            @PadRight.performed -= instance.OnPadRight;
            @PadRight.canceled -= instance.OnPadRight;
            @Start.started -= instance.OnStart;
            @Start.performed -= instance.OnStart;
            @Start.canceled -= instance.OnStart;
            @Select.started -= instance.OnSelect;
            @Select.performed -= instance.OnSelect;
            @Select.canceled -= instance.OnSelect;
        }

        public void RemoveCallbacks(IInputActions instance)
        {
            if (m_Wrapper.m_InputActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInputActions instance)
        {
            foreach (var item in m_Wrapper.m_InputActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InputActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InputActions @Input => new InputActions(this);
    public interface IInputActions
    {
        void OnLeftJoystick(InputAction.CallbackContext context);
        void OnRightJoystick(InputAction.CallbackContext context);
        void OnLeftJoystickDown(InputAction.CallbackContext context);
        void OnRightJoystickDown(InputAction.CallbackContext context);
        void OnLeftBumper(InputAction.CallbackContext context);
        void OnRightBumper(InputAction.CallbackContext context);
        void OnButtonTop(InputAction.CallbackContext context);
        void OnButtonLeft(InputAction.CallbackContext context);
        void OnButtonBottom(InputAction.CallbackContext context);
        void OnButtomRight(InputAction.CallbackContext context);
        void OnLeftTrigger(InputAction.CallbackContext context);
        void OnRightTrigger(InputAction.CallbackContext context);
        void OnPadTop(InputAction.CallbackContext context);
        void OnPadBottom(InputAction.CallbackContext context);
        void OnPadLeft(InputAction.CallbackContext context);
        void OnPadRight(InputAction.CallbackContext context);
        void OnStart(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
    }
}
